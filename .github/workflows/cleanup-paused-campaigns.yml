name: Cleanup Expired Paused Campaigns

on:
  schedule:
    # Run daily at 2 AM UTC (adjust timezone as needed)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  cleanup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Cleanup Expired Paused Campaigns
        run: |
          echo "Starting cleanup of expired paused campaigns..."
          
          # Call the cleanup API endpoint
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.CLEANUP_API_KEY }}" \
            -H "Content-Type: application/json" \
            "${{ secrets.NEXT_PUBLIC_APP_URL }}/api/cron/cleanup-paused-campaigns")
          
          if [ $response -eq 200 ]; then
            echo "‚úÖ Cleanup completed successfully"
          else
            echo "‚ùå Cleanup failed with HTTP status: $response"
            exit 1
          fi

      - name: Log Cleanup Results
        if: always()
        run: |
          echo "Cleanup job completed at $(date)"
          echo "Next scheduled run: $(date -d 'tomorrow 2:00' -u)"

  # Optional: Send notification on failure
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: cleanup
    if: failure()
    
    steps:
      - name: Send Failure Notification
        run: |
          echo "üö® Campaign cleanup failed!"
          # Add notification logic here (email, Slack, etc.)
          # Example: Send to a webhook or email service 